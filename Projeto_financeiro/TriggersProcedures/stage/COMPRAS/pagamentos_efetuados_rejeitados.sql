--PAGAMENTOS EFETUADOS QUE N�O FORAM COMPUTADOS POR APRESENTAREM ERROS
USE stage;
GO
create or alter procedure sp_pagamentos_efetuados_rejeitados as
	begin tran
		insert into STAGE.DBO.PAGAMENTOS_EFETUADOS_REJEITADOS
		select
		ID_NF_ENTRADA,
		DATA_VENCIMENTO,
		DATA_PGT_EFETUADO,
		VALOR_PARCELA_PAGO,
		case
		when ID_NF_ENTRADA NOT IN (SELECT ID_NF_ENTRADA FROM PROJETO_FINANCEIRO.DBO.PROGRAMACAO_PAGAMENTO) AND DATA_VENCIMENTO NOT IN (SELECT DATA_VENCIMENTO FROM PROJETO_FINANCEIRO.DBO.PROGRAMACAO_PAGAMENTO) then 'Pagamento n�o est� condizente com nenhuma linha da programacao'
		else 'Ok'
		END AS MOTIVO_INEXISTENCIA,
		case
		when ID_NF_ENTRADA IS NULL
		OR DATA_VENCIMENTO IS NULL
		OR DATA_PGT_EFETUADO IS NULL
		OR VALOR_PARCELA_PAGO IS NULL
		then 'Favor verificar cada coluna da linha, existe(m) valor(es) nulo(s)'
		else 'Ok'
		end as MOTIVO_NULLS
		from STAGE.DBO.PAGAMENTOS_EFETUADOS as PE
		where not exists (
		select 1 from PROJETO_FINANCEIRO.DBO.PROGRAMACAO_PAGAMENTO as PP
		where PE.ID_NF_ENTRADA = PP.ID_NF_ENTRADA
		and PE.DATA_VENCIMENTO = PP.DATA_VENCIMENTO
		and PP.STATUS_PAGAMENTO = 1)
	commit

	begin tran
		insert into STAGE.DBO.PAGAMENTOS_EFETUADOS_REJEITADOS
			select 
				ID_NF_ENTRADA,
				DATA_VENCIMENTO,
				DATA_PGT_EFETUADO,
				VALOR_PARCELA_PAGO,
				MOTIVO_INEXISTENCIA,
				MOTIVOS_NULLS
			from (select
				ID_NF_ENTRADA,
				DATA_VENCIMENTO,
				DATA_PGT_EFETUADO,
				VALOR_PARCELA_PAGO,
				'Esta NF � uma duplicata' as MOTIVO_INEXISTENCIA,
				'Ok' as MOTIVOS_NULLS,
				ROW_NUMBER() OVER (PARTITION BY ID_NF_ENTRADA, DATA_VENCIMENTO ORDER BY ID_NF_ENTRADA) as DuplicateCount
			from STAGE.DBO.PAGAMENTOS_EFETUADOS) as t 
			where DuplicateCount > 1
	commit